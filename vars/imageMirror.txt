# imageMirror

## Summary

(Mirror)[https://docs.openshift.com/container-platform/3.11/dev_guide/managing_images.html#managing-images-mirror-registry-images] an image from one registry to another.

## Usage

### Requirements

Requires Jenkins agent with:
- OC

### Parameters

The method supports the following parameters:
```groovy
// imageMirror.groovy#L4-L18

//Required
String sourceSecret = ""
String sourceRegistry = ""
String destinationSecret = ""
String destinationRegistry = ""
String insecure = "false"
String sourceNamespace = ""
String destinationNamespace = ""
String sourceImage = ""
String destinationImage = ""
String sourceImageVersion = "latest"
String destinationImageVersion = "latest"

//Optional - Platform
Integer loglevel = 0
```

### Example

```groovy
// ../test/Jenkinsfile-imageMirror#L35-L48

stage("TEST: Can promote image from one project to another") {
    imageMirror([
            sourceSecret           : "pipelinelib-testing-my-token",
            sourceRegistry         : "https://${dockerRegistry}",
            destinationSecret      : "pipelinelib-testing-my-token",
            destinationRegistry    : "https://${dockerRegistry}",
            insecure               : "true",
            sourceNamespace        : "pipelinelib-testing",
            destinationNamespace   : "pipelinelib-promotion-testing",
            sourceImage            : "jenkins-slave-image-mgmt",
            sourceImageVersion     : "latest",
            destinationImageVersion: "latest"
    ])
}
```

### Local vs Remote cluster support

As the underlying technology used is the [openshift-client-plugin](https://github.com/openshift/jenkins-client-plugin),
the ability to connect to a the local cluster, a cluster via URL/Token or using
[Jenkins configuration](https://github.com/openshift/jenkins-client-plugin#configuring-an-openshift-cluster) is as easy
as setting the clusterAPI and clusterToken parameters.

#### Secret Format

 This method supports using a Jenkins credential (via sourceSecret and destinationSecret) which is used to login to the cluster that the image mirror will work against. Typically,
 a [service account token](https://docs.openshift.com/container-platform/3.11/dev_guide/service_accounts.html#using-a-service-accounts-credentials-externally)
 would be used within the secret.

 ```yaml
 ---
 kind: Template
 apiVersion: v1
 metadata:
   name: image-mirror-credential-secret
   annotations:
     openshift.io/display-name: Image Mirror Credential Secret
 objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: "${NAME}"
    labels:
      credential.sync.jenkins.openshift.io: "true"
  type: Opaque
  data:
    username: "${USERNAME_B64}"
    password: "${PASSWORD_B64}"
 parameters:
 - name: NAME
   displayName: Name
   description: The name of secret.
   required: true
 - name: USERNAME_B64
   displayName: Username
   description: Username to use when authenticating.
   required: true
 - name: PASSWORD_B64
   displayName: Password
   description: Password to use when authenticating.
   required: true
 ```