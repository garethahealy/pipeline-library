#!groovy
@Library(["pipeline-library@jenkinsfile-tests"]) _

node("maven") {
    stage("SETUP: Check imagestream doesnt exist") {
        openshift.withCluster() {
            openshift.withProject("pipelinelib-promotion-testing") {
                def imageStream = openshift.selector("is", "jenkins-slave-image-mgmt")
                if (imageStream.exists()) {
                    imageStream.delete()
                }
            }
        }

        openshift.logLevel(10)
    }

    stage("TEST: Can promote image from one project to another") {
        imageMirror([
                sourceSecret           : "pipelinelib-testing-my-token",
                sourceRegistry         : "https://docker-registry.default.svc:5000",
                destinationSecret      : "pipelinelib-testing-my-token",
                destinationRegistry    : "https://docker-registry.default.svc:5000",
                insecure               : "true",
                sourceNamespace        : "pipelinelib-testing",
                destinationNamespace   : "pipelinelib-promotion-testing",
                sourceImage            : "jenkins-slave-image-mgmt",
                sourceImageVersion     : "latest",
                destinationImageVersion: "latest"
        ])
    }

    stage("ASSERT") {
        openshift.withCluster() {
            openshift.withProject("pipelinelib-promotion-testing") {
                def imageStream = openshift.selector("is", "jenkins-slave-image-mgmt")
                imageStream.untilEach(1) {
                    return it.object().status?.tags?.size() == 2
                }
            }
        }
    }
}